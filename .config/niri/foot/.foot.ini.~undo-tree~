(undo-tree-save-format-version . 1)
"a04a46c7c5a5f8263cb96b8e32d2430ce04c9b60"
[nil nil nil nil (26869 23535 768832 334000) 0 nil]
([nil nil ((272 . 273) (t 26699 21308 471917 581000)) nil (26869 23535 768831 645000) 0 nil])
([nil nil ((292 . 293)) nil (26869 23535 768831 164000) 0 nil])
([nil nil ((293 . 299)) nil (26869 23535 768830 824000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -298) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 299) nil (26869 23535 768829 892000) 0 nil])
([nil nil ((298 . 301)) nil (26869 23535 768785 377000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -300) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 301) nil (26869 23535 768784 297000) 0 nil])
([nil nil ((300 . 303)) nil (26869 23535 768764 963000) 0 nil])
([nil nil ((683 . 684) (t 26869 23535 781559 263000)) nil (26870 8438 228529 876000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1101 . 1102) (nil fontified nil 684 . 1102) (684 . 1102)) nil (26870 8438 228528 874000) 0 nil])
([nil nil ((1102 . 1103)) nil (26870 8438 228524 535000) 0 nil])
([nil nil ((#("[main]
# Primary font (comma-separate fallbacks)
font=JetBrainsMono Nerd Font:size=11, Noto Color Emoji:style=Regular

# Optional explicit faces (foot will derive these if omitted)
font-bold=JetBrainsMono Nerd Font:style=Bold:size=11
font-italic=JetBrainsMono Nerd Font:style=Italic:size=11
font-bold-italic=JetBrainsMono Nerd Font:style=Bold Italic:size=11
" 0 1 (fontified t) 1 5 (face font-lock-type-face fontified t) 5 7 (fontified t) 7 9 (face font-lock-comment-delimiter-face fontified t) 9 49 (face font-lock-comment-face fontified t) 49 53 (face font-lock-variable-name-face fontified t) 53 119 (fontified t) 119 121 (face font-lock-comment-delimiter-face fontified t) 121 181 (face font-lock-comment-face fontified t) 181 190 (face font-lock-variable-name-face fontified t) 190 234 (fontified t) 234 245 (face font-lock-variable-name-face fontified t) 245 291 (fontified t) 291 307 (face font-lock-variable-name-face fontified t) 307 358 (fontified t)) . -684) (undo-tree-id0 . -358) (undo-tree-id1 . -358) (undo-tree-id2 . -358) (undo-tree-id3 . -358) (undo-tree-id4 . -358) (undo-tree-id5 . -358) (undo-tree-id6 . -291) (undo-tree-id7 . -291) (undo-tree-id8 . -291) (undo-tree-id9 . -291) (undo-tree-id10 . -291) (undo-tree-id11 . -291) (undo-tree-id12 . -234) (undo-tree-id13 . -234) (undo-tree-id14 . -234) (undo-tree-id15 . -234) (undo-tree-id16 . -234) (undo-tree-id17 . -234) (undo-tree-id18 . -181) (undo-tree-id19 . -181) (undo-tree-id20 . -181) (undo-tree-id21 . -181) (undo-tree-id22 . -181) (undo-tree-id23 . -181) (undo-tree-id24 . -119) (undo-tree-id25 . -119) (undo-tree-id26 . -119) (undo-tree-id27 . -119) (undo-tree-id28 . -119) (undo-tree-id29 . -119) (undo-tree-id30 . -118) (undo-tree-id31 . -118) (undo-tree-id32 . -118) (undo-tree-id33 . -118) (undo-tree-id34 . -118) (undo-tree-id35 . -118) (undo-tree-id36 . -49) (undo-tree-id37 . -49) (undo-tree-id38 . -49) (undo-tree-id39 . -49) (undo-tree-id40 . -49) (undo-tree-id41 . -49) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -49) (undo-tree-id67 . -49) (undo-tree-id68 . -49) (undo-tree-id69 . -49) (undo-tree-id70 . -49) (undo-tree-id71 . -49) (undo-tree-id72 . -118) (undo-tree-id73 . -118) (undo-tree-id74 . -118) (undo-tree-id75 . -118) (undo-tree-id76 . -118) (undo-tree-id77 . -118) (undo-tree-id78 . -119) (undo-tree-id79 . -119) (undo-tree-id80 . -119) (undo-tree-id81 . -119) (undo-tree-id82 . -119) (undo-tree-id83 . -119) (undo-tree-id84 . -181) (undo-tree-id85 . -181) (undo-tree-id86 . -181) (undo-tree-id87 . -181) (undo-tree-id88 . -181) (undo-tree-id89 . -181) (undo-tree-id90 . -234) (undo-tree-id91 . -234) (undo-tree-id92 . -234) (undo-tree-id93 . -234) (undo-tree-id94 . -234) (undo-tree-id95 . -234) (undo-tree-id96 . -291) (undo-tree-id97 . -291) (undo-tree-id98 . -291) (undo-tree-id99 . -291) (undo-tree-id100 . -291) (undo-tree-id101 . -291) (undo-tree-id102 . -291) (undo-tree-id103 . -291) (undo-tree-id104 . -291) (undo-tree-id105 . -291) (undo-tree-id106 . -291) (undo-tree-id107 . -358) (undo-tree-id108 . -358) (undo-tree-id109 . -358) (undo-tree-id110 . -358) (undo-tree-id111 . -358) (undo-tree-id112 . -358) (undo-tree-id113 . -358) (undo-tree-id114 . -358) (undo-tree-id115 . -358) (undo-tree-id116 . -358) (undo-tree-id117 . -358) (undo-tree-id118 . -358) (undo-tree-id119 . -358) (undo-tree-id120 . -358) (undo-tree-id121 . -358) (undo-tree-id122 . -358) (undo-tree-id123 . -358) (undo-tree-id124 . -358) 1042 (t 26870 8438 239274 388000)) nil (26870 9830 9617 923000) 0 nil])
([nil nil ((nil rear-nonsticky nil 868 . 869) (nil fontified nil 684 . 869) (684 . 869)) nil (26870 9830 9340 68000) 0 nil])
([nil nil ((#("# Nice-to-haves (optional)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 870) (undo-tree-id147 . -26) (t 26870 9830 35475 816000)) nil (26870 37523 824257 687000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 870) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1)) nil (26870 37523 824256 349000) 0 nil])
([nil nil ((#("line-height=1.1" 0 11 (face font-lock-variable-name-face fontified t) 11 15 (fontified t)) . 870) (undo-tree-id129 . -15)) nil (26870 37523 824248 58000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 870) (undo-tree-id128 . -1)) nil (26870 37523 824247 24000) 0 nil])
([nil nil ((#("letter-spacing=0" 0 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 16 (fontified t rear-nonsticky t)) . 870) (undo-tree-id127 . -16)) nil (26870 37523 824245 468000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 870) (undo-tree-id126 . -1)) nil (26870 37523 824238 794000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 870) (undo-tree-id125 . -1)) nil (26870 37523 823130 455000) 0 nil])
nil
