#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# Super Return to start an instance of foot (https://codeberg.org/dnkl/foot)
# Note: Load this first in case all hell breaks loose.
riverctl map normal Super Return spawn foot

## SET SHELL GLOBALS #########################################################
river_dir="~/.config/river"
script_dir="~/.config/river/scripts"

## STARTUP APPS ##############################################################
riverctl spawn "dbus-update-activation-environment DISPLAY WAYLAND_DISPLAY XDG_SESSION_TYPE XDG_CURRENT_DESKTOP"
riverctl spawn "/usr/lib/xfce-polkit/xfce-polkit"
riverctl spawn "swayidle -w timeout 1200 $script_dir/lockscreen"
riverctl spawn "nm-applet --indicator"
riverctl spawn "$script_dir/wallpaper"
riverctl spawn "$script_dir/notifications"
riverctl spawn "$script_dir/statusbar"
riverctl spawn mpd

## CONFIGURE OUTPUTS ########################################################
riverctl spawn "wlr-randr -output HDMI-A-1 -mode 1920x1080 -pos 0,0"
riverctl spawn "wlr-randr -output HDMI-A-2 -mode 1920x1080 -pos 1920,0"
riverctl spawn "wlr-randr -output HDMI-A-3 -mode 1920x1080 -pos 3840,0"

## CONFIGURE INPUTS #########################################################


## CONFIGURE KEY BINBDINGS - APPLICATIONS ###################################

# Super+G Keybindings App
riverctl map normal Super G spawn "$script_dir/rofi_bindings"

# Super+D Launcher
riverctl map normal Super D spawn "$script_dir/rofi_launcher"

# Alt+F2 Runner
riverctl map normal Alt F1 spawn "$script_dir/rofi_runner"

# Super+B Bluetooth
riverctl map normal Super B spawn "$script_dir/rofi_bluetooth"

# Super+X Powermenu
riverctl map normal Super X spawn "$script_dir/rofi_powermenu"

# Super+M Music
riverctl map normal Super M spawn "$script_dir/rofi_music"

# Super+N Network
riverctl map normal Super N spawn "$script_dir/rofi_network"

# Super+R Asroot
riverctl map normal Super R spawn "$script_dir/rofi_asroot"

# Super+S Screenshot
riverctl map normal Super S spawn "$script_dir/rofi_screenshot"

# Super+Shift+F File Manager
riverctl map normal Super+Shift F spawn "thunar"

# Super+Shift+E Editor
riverctl map normal Super+Shift E spawn "emacs"

# Super+Shift+W Browser
riverctl map normal Super D spawn "firedragon"

## CONFIGURE KEY BINDINGS - SYSTEM #########################################

# OEM Screenshot
riverctl map normal Print spawn "$scripts_dir/screenshot --now"

## CONFIGURE KEY BINDINGS - WM ############################################

# Super+Q to close the focused view
riverctl map normal Super Q close

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+<--> to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift right swap next
riverctl map normal Super+Shift left swap previous

# Super+{J,K} to focus the next/previous output
riverctl map normal Super K focus-output next
riverctl map normal Super J focus-output previous

# Super+Shift+{J,K} to send the focused view to the next/previous output
riverctl map normal Super+Shift K send-to-output next
riverctl map normal Super+Shift J send-to-output previous

# Super+E to bump the focused view to the top of the layout stack
riverctl map normal Super E zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{left,down,up,right} to move views
riverctl map normal Super+Alt Left move left 100
riverctl map normal Super+Alt Down move down 100
riverctl map normal Super+Alt Up move up 100
riverctl map normal Super+Alt Right move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Control+Shift+{left,down,up,right} to resize views
riverctl map normal Super+Control Left resize horizontal -100
riverctl map normal Super+Control Up resize vertical 100
riverctl map normal Super+Control Down resize vertical -100
riverctl map normal Super+Control Right resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    riverctl map $mode None XF86AudioRaiseVolume  spawn '$script_dir/volume --inc'
    riverctl map $mode None XF86AudioLowerVolume  spawn '$script_dir/volume --dec'
    riverctl map $mode None XF86AudioMute         spawn '$script_dir/volume --toggle'
    riverctl map $mode None XF86AudioMicMute      spawn '$script_dir/volume --toggle-mic'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn '$script_dir/brightness --inc'
    riverctl map $mode None XF86MonBrightnessDown spawn '$script_dir/brightness --dec'
done

## THEME ####################################################################

background_color = "0x0F1B25"
focused_border = "0x71ABB9"
unfocused_border = "0x162837"
urgent_border = "0x467687"

riverctl border-width 2
riverctl border-color-focused $focused_border
riverctl border-color-unfocused $unfocused_border
riverctl border-color-urgent $urgent_border
riverctl xcursor-theme "Qogirr 16"
riverctl background-color $background_color

riverctl set-repeat 50 300
riverctl focus-follows-cursor "normal"
riverctl set-cursor-warp "on-output-change"
riverctl attach-mode "bottom"
riverctl default-layout "rivertile"

riverctl spawn "org.gnome.desktop.interface -gtk-theme Arc-Dark -icon-theme Arc-Circle -font-name Noto Sans 9 -cursor-theme Qogirr -cursor-size 16"

riverctl spawn "org.gnome.desktop.wm.preferences -button-layout :close"

## RULES ####################################################################

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd


## INITIAL LAYOUT ###########################################################

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
rivertile -view-padding 6 -outer-padding 6 -main-location "left" -main-count 1 -main-ratio 0.55 &
